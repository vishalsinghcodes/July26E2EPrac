<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-26T08:04:36 IST" name="Suite" finished-at="2024-07-26T08:05:24 IST" duration-ms="48308">
    <groups>
      <group name="Regression">
        <method signature="E2ETests.PurchasemultipleProduct(java.util.HashMap)[pri:0, instance:testSuite.E2ETests@48e92c5c]" name="PurchasemultipleProduct" class="testSuite.E2ETests"/>
        <method signature="LandingPageTests.errorMessageonLoginTest()[pri:0, instance:testSuite.LandingPageTests@2e1ef60]" name="errorMessageonLoginTest" class="testSuite.LandingPageTests"/>
        <method signature="ProductCatalogPageTest.checkBlinkText(java.util.HashMap)[pri:0, instance:testSuite.ProductCatalogPageTest@2f16c6b3]" name="checkBlinkText" class="testSuite.ProductCatalogPageTest"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2024-07-26T08:04:36 IST" name="Test" finished-at="2024-07-26T08:05:24 IST" duration-ms="48308">
      <class name="testSuite.E2ETests">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testSuite.E2ETests@48e92c5c]" started-at="2024-07-26T08:04:44 IST" name="launchApplication" finished-at="2024-07-26T08:04:46 IST" duration-ms="2561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="PurchasemultipleProduct(java.util.HashMap)[pri:0, instance:testSuite.E2ETests@48e92c5c]" started-at="2024-07-26T08:04:46 IST" name="PurchasemultipleProduct" data-provider="CorrectdataPro" finished-at="2024-07-26T08:05:04 IST" duration-ms="17577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, product=ZARA COAT 3, username=shetty@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PurchasemultipleProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testSuite.E2ETests@48e92c5c]" started-at="2024-07-26T08:05:04 IST" name="tearDown" finished-at="2024-07-26T08:05:04 IST" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testSuite.E2ETests@48e92c5c]" started-at="2024-07-26T08:05:04 IST" name="launchApplication" finished-at="2024-07-26T08:05:07 IST" duration-ms="2714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="PurchasemultipleProduct(java.util.HashMap)[pri:0, instance:testSuite.E2ETests@48e92c5c]" started-at="2024-07-26T08:05:07 IST" name="PurchasemultipleProduct" data-provider="CorrectdataPro" finished-at="2024-07-26T08:05:21 IST" duration-ms="14263" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Password1234, product=ZARA COAT 3, username=Udemyselenium@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[C:\Users\Vishal Singh\eclipse-workspace\PracticeE2EECommerce2024\Downloads\order-invoice_Udemyselenium.xlsx (The system cannot find the file specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: C:\Users\Vishal Singh\eclipse-workspace\PracticeE2EECommerce2024\Downloads\order-invoice_Udemyselenium.xlsx (The system cannot find the file specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
at e2e.pageObjects.OrderDetailsPage.checkOrdersinExcelandWebPage(OrderDetailsPage.java:41)
at testSuite.E2ETests.PurchasemultipleProduct(E2ETests.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PurchasemultipleProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testSuite.E2ETests@48e92c5c]" started-at="2024-07-26T08:05:21 IST" name="tearDown" finished-at="2024-07-26T08:05:21 IST" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testSuite.E2ETests -->
      <class name="testSuite.ProductCatalogPageTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testSuite.ProductCatalogPageTest@2f16c6b3]" started-at="2024-07-26T08:04:36 IST" name="launchApplication" finished-at="2024-07-26T08:04:39 IST" duration-ms="2952" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="checkBlinkText(java.util.HashMap)[pri:0, instance:testSuite.ProductCatalogPageTest@2f16c6b3]" started-at="2024-07-26T08:04:39 IST" name="checkBlinkText" data-provider="CorrectdataPro" finished-at="2024-07-26T08:04:40 IST" duration-ms="542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, product=ZARA COAT 3, username=shetty@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBlinkText -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testSuite.ProductCatalogPageTest@2f16c6b3]" started-at="2024-07-26T08:04:40 IST" name="tearDown" finished-at="2024-07-26T08:04:40 IST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testSuite.ProductCatalogPageTest@2f16c6b3]" started-at="2024-07-26T08:04:40 IST" name="launchApplication" finished-at="2024-07-26T08:04:43 IST" duration-ms="2694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="checkBlinkText(java.util.HashMap)[pri:0, instance:testSuite.ProductCatalogPageTest@2f16c6b3]" started-at="2024-07-26T08:04:43 IST" name="checkBlinkText" data-provider="CorrectdataPro" finished-at="2024-07-26T08:04:43 IST" duration-ms="599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Password1234, product=ZARA COAT 3, username=Udemyselenium@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBlinkText -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testSuite.ProductCatalogPageTest@2f16c6b3]" started-at="2024-07-26T08:04:43 IST" name="tearDown" finished-at="2024-07-26T08:04:44 IST" duration-ms="274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testSuite.ProductCatalogPageTest -->
      <class name="testSuite.LandingPageTests">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testSuite.LandingPageTests@2e1ef60]" started-at="2024-07-26T08:05:21 IST" name="launchApplication" finished-at="2024-07-26T08:05:24 IST" duration-ms="2645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="errorMessageonLoginTest()[pri:0, instance:testSuite.LandingPageTests@2e1ef60]" started-at="2024-07-26T08:05:24 IST" name="errorMessageonLoginTest" finished-at="2024-07-26T08:05:24 IST" duration-ms="450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- errorMessageonLoginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testSuite.LandingPageTests@2e1ef60]" started-at="2024-07-26T08:05:24 IST" name="tearDown" finished-at="2024-07-26T08:05:24 IST" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testSuite.LandingPageTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
